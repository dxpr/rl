<?php

/**
 * @file
 * Primary module file for Reinforcement Learning.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function rl_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.rl':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Reinforcement Learning module provides a core API for tracking multi-armed bandit experiments using turns and rewards. It supports Thompson Sampling for optimizing decision making.') . '</p>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t('Abstract experiment tracking with deterministic IDs') . '</li>';
      $output .= '<li>' . t('Turn and reward recording') . '</li>';
      $output .= '<li>' . t('Thompson Sampling algorithm implementation') . '</li>';
      $output .= '<li>' . t('Optimized endpoints for high-performance tracking') . '</li>';
      $output .= '<li>' . t('Service API for server-side integration') . '</li>';
      $output .= '</ul>';
      return $output;
  }
}

/**
 * Implements hook_requirements().
 */
function rl_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $module_handler = \Drupal::service('module_handler');
    if ($module_handler->moduleExists('page_cache')) {
      $requirements['rl_page_cache_conflict'] = [
        'title' => t('RL: Page Cache compatibility'),
        'severity' => REQUIREMENT_ERROR,
        'value' => t('Page Cache module is enabled'),
        'description' => t('The Page Cache module breaks time-based cache expiration needed for RL experiments. <a href="@link">Disable the Page Cache module</a> to fix this issue. Page cache only saves 10-20ms and conflicts with proper caching. See <a href="@issue" target="_blank">Drupal core issue #2352009</a>.', [
          '@link' => '/admin/modules/uninstall',
          '@issue' => 'https://www.drupal.org/project/drupal/issues/2352009',
        ]),
      ];
    }
  }

  return $requirements;
}
